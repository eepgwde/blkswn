## @file _IceFireA.py
# @brief Analyzer for text files from IceFireR.py
# @author weaves
#
#

import logging
import configparser
import socks
import socket
from urllib import request

from functools import partial

from blkswn import Configuration
from blkswn import IceFire

import ast


class IceFireA(object):
  """
  Analyzer for text files.

  This is a test interface. It could just take a list iterator. Like from IceFireR.

  The text files are generated by IceFireR.py see test_Test2.py
  """

  _type0 = None                 # books or characters or houses
  _src = None                   # the iterator

  def __init__(self, **kwargs):
    """
    Set the type0 if given as a keyword. Take the filename and form an iterator.

    """
    if 'type0' in kwargs:
      v0 = kwargs['type0']
      if not v0 in IceFire.types0:
        t0 = ','.join(IceFire.types0)
        s0 = '"{v0}" not a known type "{t0}"'.format(t0=t0, v0=v0)
        raise ValueError(s0)

      self._type0 = v0

    if 'file' in kwargs:
      with open(kwargs['file'], 'r') as f0:
        v0 = f0.read()
        v0 = ast.literal_eval(v0)
        self._src = iter(v0)

    if self._src is None:
      raise ValueError("no data source given")

  def filter(self, **kwargs):
    pass

